plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.saberoueslati'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
}

tasks.named('test') {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.11" // latest version as of now
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // Run report after tests
}

jacocoTestReport {
    dependsOn test // tests must run first
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}

tasks.register("buildFrontend", Exec) {
    workingDir = file("../frontend")
    commandLine = ["npm", "run", "build"]

    inputs.files(fileTree("../frontend/src"))
    inputs.file("../frontend/angular.json")
    inputs.file("../frontend/package.json")
    inputs.file("../frontend/tsconfig.app.json")

    outputs.dir("../frontend/dist")
}

tasks.register("copyFrontend", Copy) {
    dependsOn("buildFrontend")
    from("../frontend/dist")
    into("src/main/resources/static")

    doLast {
        println("âœ… Angular build copied to Spring Boot static/")
    }
}

tasks.register("startApp") {
    dependsOn("copyFrontend", "bootRun")
}
